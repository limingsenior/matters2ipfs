{"version":3,"sources":["utils/index.js","components/SnackBarContent.js","public-gateway.js","Home.js","utils/api.js","App.js","serviceWorker.js","index.js"],"names":["graphQLClient","GraphQLClient","headers","mode","isValidUrl","string","URL","_","getHash","url","indexOf","matchResult","match","split","getMattersHash","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","options","query","data","wrap","_context","prev","next","mediaHash","concat","request","sent","abrupt","Error","stop","_x","apply","this","arguments","variantIcon","success","CheckCircleIcon","warning","WarningIcon","error","ErrorIcon","info","InfoIcon","useStyles1","makeStyles","theme","backgroundColor","green","palette","dark","primary","main","amber","icon","fontSize","iconVariant","opacity","marginRight","spacing","message","display","alignItems","MySnackbarContentWrapper","props","classes","className","onClose","variant","other","objectWithoutProperties","Icon","react_default","createElement","SnackbarContent","assign","clsx","aria-describedby","id","action","IconButton","key","aria-label","color","onClick","Close_default","public_gateway","useStyles","root","paddingBottom","button","marginTop","marginBottom","buttonGrow","flexGrow","buttonBox","input","buttonIcon","formControl","minWidth","listItem","wordBreak","buttonSplit","flex","legend","loading","margin","justifyContent","divider","close","padding","heroContent","buttonRight","marginLeft","space","priButton","center","centerButton","overAvatar","paddingRight","subheader","top","zIndex","position","inputRoot","defineProperty","width","height","resultId","Home","searchParams","URLSearchParams","window","location","search","searchUrl","get","corsApi","_useState","useState","_useState2","slicedToArray","isLoading","setLoading","_useState3","_useState4","setUrl","_useState5","_useState6","setMediaHash","_useState7","_useState8","hash","setHash","_useState9","_useState10","autoConvert","setAutoConvert","_useState11","count","checkedCount","onlineCount","offlineCount","_useState12","checkedStat","setCheckedStat","_useState13","_useState14","checkedMap","setCheckedMap","getUrlError","_useState15","_useState16","open","setOpen","_useState17","_useState18","openError","setOpenError","_useState19","_useState20","isInit","setIsInit","_useState21","_useState22","urlError","setUrlError","_useState23","_useState24","errorMessage","setErrorMessage","handleChangeHash","currentHash","currentCheckedMap","i","gateways","length","gatewayAndHash","replace","displayUrl","requestUrl","status","keys","prevCheckedStat","forEach","config","item","start","Date","now","currentResultId","axios","then","result","JSON","stringify","catch","response","spend","currentCheckedStat","prevCheckedMap","checkedMapState","timeout","e","handleChangeUrl","currentUrl","target","value","isUrlError","handleClose","event","reason","handleCloseError","handleConvert","_ref2","mattersResult","dataHash","article","t0","handleClickCopy","useEffect","currentPageAutoLink","protocol","host","encodeURIComponent","Container","maxWidth","Typography","component","align","gutterBottom","Link","href","rel","FormGroup","TextField","required","autoFocus","inputProps","autoComplete","label","type","placeholder","onChange","helperText","row","Button","size","disabled","CircularProgress","ImportExport","Divider","List","aria-labelledby","ListSubheader","dense","map","index","ListItem","ListItemAvatar","AccessTime","HighlightOff","index_es","ListItemText","primaryTypographyProps","secondary","ListItemSecondaryAction","lib","text","onCopy","edge","Paper","InputBase","iconButton","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","flexDirection","minHeight","background","paper","grow","menuButton","link","title","footer","paddingTop","borderTop","lineHeight","ButtonAppBar","Fragment","CssBaseline","style","Home_Home","Boolean","hostname","createMuiTheme","ReactDOM","render","ThemeProvider","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e9df08dc.chunk.js","sourcesContent":["import { GraphQLClient } from \"graphql-request\";\nconst endpoint = \"https://cors-anywhere.herokuapp.com/https://server.matters.news/graphql\";\n  const graphQLClient = new GraphQLClient(endpoint,{\n      headers:{\n          // origin:'https://matters.news',\n          // 'x-requested-with':'matters'\n      },\n      mode: 'cors',\n \n});\nexport { api } from \"./api\";\n\nexport function getExtname(filename) {\n  const ext = filename.split(\".\").pop();\n  if (ext) {\n    return `.${ext}`;\n  }\n}\nexport const isValidUrl = string => {\n  if (!string) {\n    return true;\n  }\n  try {\n    new URL(string);\n    return true;\n  } catch (_) {\n    return false;\n  }\n};\nexport const getHash = url => {\n  if(url.indexOf('matters.news')<0){\n    return ''\n  }\n  const matchResult = url.match(/.+-(.+)/)\n  if(matchResult && matchResult[1]){\n    const hashResult = matchResult[1]\n    // check is inclue hash\n    const hash = hashResult.split('#')[0]\n    return hash\n  }else{\n    return ''\n  }\n}\nexport const getMattersHash =async options => {\n  if(options && options.mediaHash){\n    const query = /* GraphQL */ `\n    query {\n      article(input: { mediaHash: \"${options.mediaHash}\" }) {\n        dataHash\n      }\n    }\n  `;\n  const data = await graphQLClient.request(query);\n  return data;\n  }else{\n    throw new Error(`Can't found mediaHash`)\n  }\n  \n}","import React from \"react\";\nimport clsx from \"clsx\";\nimport { amber, green } from \"@material-ui/core/colors\";\nimport ErrorIcon from \"@material-ui/icons/Error\";\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport WarningIcon from \"@material-ui/icons/Warning\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SnackbarContent from \"@material-ui/core/SnackbarContent\";\nconst variantIcon = {\n  success: CheckCircleIcon,\n  warning: WarningIcon,\n  error: ErrorIcon,\n  info: InfoIcon\n};\n\nconst useStyles1 = makeStyles(theme => ({\n  success: {\n    backgroundColor: green[600]\n  },\n  error: {\n    backgroundColor: theme.palette.error.dark\n  },\n  info: {\n    backgroundColor: theme.palette.primary.main\n  },\n  warning: {\n    backgroundColor: amber[700]\n  },\n  icon: {\n    fontSize: 20\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing(1)\n  },\n  message: {\n    display: \"flex\",\n    alignItems: \"center\"\n  }\n}));\n\nexport default function MySnackbarContentWrapper(props) {\n  const classes = useStyles1();\n  const { className, message, onClose, variant, ...other } = props;\n  const Icon = variantIcon[variant];\n\n  return (\n    <SnackbarContent\n      className={clsx(classes[variant], className)}\n      aria-describedby=\"client-snackbar\"\n      message={\n        <span id=\"client-snackbar\" className={classes.message}>\n          <Icon className={clsx(classes.icon, classes.iconVariant)} />\n          {message}\n        </span>\n      }\n      action={[\n        <IconButton\n          key=\"close\"\n          aria-label=\"Close\"\n          color=\"inherit\"\n          onClick={onClose}\n        >\n          <CloseIcon className={classes.icon} />\n        </IconButton>\n      ]}\n      {...other}\n    />\n  );\n}\n","export default [\n  \"https://ninetailed.ninja/ipfs/:hash\",\n  \"https://siderus.io/ipfs/:hash\",\n  \"https://eu.siderus.io/ipfs/:hash\",\n  \"https://na.siderus.io/ipfs/:hash\",\n  \"https://ap.siderus.io/ipfs/:hash\",\n  \"https://ipfs.eternum.io/ipfs/:hash\",\n  \"https://hardbin.com/ipfs/:hash\",\n  \"https://ipfs.wa.hle.rs/ipfs/:hash\",\n  \"https://gateway.pinata.cloud/ipfs/:hash\",\n  \"https://ipfs.sloppyta.co/ipfs/:hash\",\n  \"https://ipfs.busy.org/ipfs/:hash\",\n  \"https://ipfs.greyh.at/ipfs/:hash\",\n  \"https://gateway.serph.network/ipfs/:hash\",\n  \"https://ipfs.fooock.com/ipfs/:hash\",\n  \"https://ipfstube.erindachtler.me/ipfs/:hash\",\n  \"https://cdn.cwinfo.net/ipfs/:hash\",\n  \"https://ipfs.privacytools.io/ipfs/:hash\",\n  \"https://d26g9c7mfuzstv.cloudfront.net/ipfs/:hash\",\n  \"https://gateway.temporal.cloud/ipfs/:hash\",\n  \"https://ipfs.jes.xxx/ipfs/:hash\",\n  \"https://cloudflare-ipfs.com/ipfs/:hash\",\n  \"https://ipfs.io/ipfs/:hash\",\n  \"https://gateway.ipfs.io/ipfs/:hash\",\n  \"https://ipfs.infura.io/ipfs/:hash\",\n  \"https://upload.global/ipfs/:hash\",\n  \"https://catalunya.network/ipfs/:hash\",\n  \"https://ipfs.works/ipfs/:hash\",\n  \"https://api.wisdom.sh/ipfs/:hash\",\n  \"https://ipfs.macholibre.org/ipfs/:hash\",\n  \"https://ipns.co/:hash\",\n  \"https://ipfs.netw0rk.io/ipfs/:hash\",\n  \"https://gateway.swedneck.xyz/ipfs/:hash\",\n  \"https://ipfs.mrh.io/ipfs/:hash\",\n  \"https://gateway.originprotocol.com/ipfs/:hash\",\n  \"https://ipfs.dapps.earth/ipfs/:hash\",\n  \"https://ipfs.doolta.com/ipfs/:hash\",\n  \"https://rx14.co.uk/ipfs/:hash\",\n  \"https://ipfs.globalupload.io/ipfs/:hash\",\n  \"https://ipfs.renehsz.com/ipfs/:hash\",\n  \"https://gateway.blocksec.com/ipfs/:hash\",\n  \"https://jorropo.ovh/ipfs/:hash\",\n];\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Button,\n  TextField,\n  FormGroup,\n  Typography,\n  Link,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemSecondaryAction,\n  ListSubheader,\n  ListItemAvatar,\n  CircularProgress,\n  IconButton,\n  InputBase,\n  Divider,\n  Snackbar,\n  Container,\n  Paper\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport { CheckCircle, ContentCopy } from \"mdi-material-ui\";\nimport { HighlightOff, ImportExport, AccessTime } from \"@material-ui/icons\";\nimport { api, isValidUrl, getHash, getMattersHash } from \"./utils\";\nimport SnackBarContentWrapper from \"./components/SnackBarContent\";\nimport gateways from \"./public-gateway\";\nimport \"./Home.css\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    paddingBottom: 30\n  },\n  button: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  },\n  buttonGrow: {\n    flexGrow: 1\n  },\n  buttonBox: {},\n  input: {\n    display: \"none\"\n  },\n  buttonIcon: {\n    marginRight: theme.spacing(1)\n  },\n  formControl: {\n    marginRight: theme.spacing(4),\n    minWidth: 120\n  },\n  listItem: {\n    wordBreak: \"break-all\"\n  },\n  buttonSplit: {\n    flex: 1\n  },\n  legend: {\n    color: \"rgba(0, 0, 0, 0.38)\"\n  },\n  loading: {\n    margin: theme.spacing(4),\n    display: \"flex\",\n    justifyContent: \"center\"\n  },\n  divider: {\n    marginTop: theme.spacing(4),\n    marginBottom: theme.spacing(4)\n  },\n  close: {\n    padding: theme.spacing(0.5)\n  },\n  error: {\n    backgroundColor: \"red\"\n  },\n  heroContent: {\n    padding: theme.spacing(8, 0, 6)\n  },\n  buttonRight: {\n    marginLeft: theme.spacing(4)\n  },\n  space: {\n    marginLeft: theme.spacing(1)\n  },\n  priButton: {\n    justifyContent: \"flex-end\"\n  },\n  center: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  centerButton: {\n    marginTop: theme.spacing(4),\n    justifyContent: \"center\"\n  },\n  overAvatar: {\n    minWidth: 0,\n    paddingRight: theme.spacing(1)\n  },\n  subheader: {\n    top: \"auto\",\n    zIndex: \"auto\",\n    position: \"static\"\n  },\n  inputRoot: {\n    marginTop:theme.spacing(2),\n    marginBottom:theme.spacing(4),\n    padding: \"2px 4px\",\n    display: \"flex\",\n    alignItems: \"center\"\n  },\n  input: {\n    marginLeft: 8,\n    flex: 1\n  },\n  iconButton: {\n    padding: 10\n  },\n  inputDivider: {\n    width: 1,\n    height: 28,\n    margin: 4\n  }\n}));\nlet resultId = 1;\nexport default function Home() {\n  const classes = useStyles();\n  // get search params\n  const searchParams = new URLSearchParams(window.location.search);\n  const searchUrl = searchParams.get(\"url\") || \"\";\n  const corsApi = searchParams.get(\"cors\") || \"\";\n  const [isLoading, setLoading] = useState(false);\n  const [url, setUrl] = useState(\"\");\n  const [mediaHash, setMediaHash] = useState(\"\");\n  const [hash, setHash] = useState(\"\");\n  const [autoConvert, setAutoConvert] = useState(false);\n  const [checkedStat, setCheckedStat] = useState({\n    id: resultId,\n    count: 0,\n    checkedCount: 0,\n    onlineCount: 0,\n    offlineCount: 0\n  });\n  const [checkedMap, setCheckedMap] = useState({});\n  const getUrlError = url => {\n    return !isValidUrl(url);\n  };\n  const [open, setOpen] = useState(false);\n  const [openError, setOpenError] = useState(false);\n  const [isInit, setIsInit] = useState(false);\n  const [urlError, setUrlError] = useState(getUrlError(url));\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  const handleChangeHash = currentHash => {\n    // checkedMap\n    if (currentHash) {\n      // if hash exist\n      const currentCheckedMap = {};\n      for (let i = 0; i < gateways.length; i++) {\n        const gateway = gateways[i];\n        const gatewayAndHash = gateway.replace(\":hash\", currentHash);\n        // opt-out from gateway redirects done by browser extension\n        const corsHost = corsApi;\n        const displayUrl = corsHost + gatewayAndHash;\n        const requestUrl = displayUrl + \"#x-ipfs-companion-no-redirect\";\n        currentCheckedMap[displayUrl] = {\n          displayUrl: displayUrl,\n          requestUrl: requestUrl,\n          status: \"checking\"\n        };\n      }\n\n      setCheckedMap(currentCheckedMap);\n      const keys = Object.keys(currentCheckedMap);\n      setCheckedStat(prevCheckedStat => {\n        return {\n          count: keys.length,\n          checkedCount: 0,\n          onlineCount: 0,\n          offlineCount: 0\n        };\n      });\n      keys.forEach(key => {\n        const item = currentCheckedMap[key];\n        const start = Date.now();\n        const currentResultId = resultId;\n        api(item.requestUrl)\n          .then(() => {\n            const end = Date.now();\n            const spend = end - start;\n            setCheckedStat(prevCheckedStat => {\n              const currentCheckedStat = Object.assign({}, prevCheckedStat);\n              if (resultId === currentResultId) {\n                currentCheckedStat.checkedCount++;\n                currentCheckedStat.onlineCount++;\n              }\n              return currentCheckedStat;\n            });\n            setCheckedMap(prevCheckedMap => {\n              const checkedMapState = Object.assign({}, prevCheckedMap);\n              if (checkedMapState[key] && resultId === currentResultId) {\n                checkedMapState[key].status = \"online\";\n                checkedMapState[key].timeout = spend;\n              }\n              return checkedMapState;\n            });\n          })\n          .catch(e => {\n            setCheckedStat(prevCheckedStat => {\n              const currentCheckedStat = Object.assign({}, prevCheckedStat);\n              if (resultId === currentResultId) {\n                currentCheckedStat.checkedCount++;\n                currentCheckedStat.offlineCount++;\n              }\n              return currentCheckedStat;\n            });\n            setCheckedMap(prevCheckedMap => {\n              const checkedMapState = Object.assign({}, prevCheckedMap);\n              if (checkedMapState[key] && resultId === currentResultId) {\n                checkedMapState[key].status = \"offline\";\n                checkedMapState[key].error = e.message || \"Timeout!\";\n              }\n              return checkedMapState;\n            });\n          });\n      });\n    }\n  };\n\n  const handleChangeUrl = e => {\n    const currentUrl = e.target.value;\n    const isUrlError = getUrlError(currentUrl);\n    setUrl(currentUrl);\n    setUrlError(isUrlError);\n    if (isUrlError) {\n      setMediaHash(\"\");\n    } else {\n      const currentHash = getHash(currentUrl);\n      setMediaHash(currentHash);\n    }\n  };\n  function handleClose(event, reason) {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setOpen(false);\n  }\n\n  function handleCloseError(event, reason) {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setOpenError(false);\n  }\n  function getResults() {\n    const keys = Object.keys(checkedMap);\n    const results = keys.map(key => {\n      return checkedMap[key];\n    });\n    return results;\n  }\n\n  const handleConvert = async () => {\n    if (!mediaHash) {\n      setErrorMessage(`Please input a valid matters article url`);\n      setOpenError(true);\n      return;\n    }\n    resultId++;\n\n    // setloading\n    setLoading(true);\n    setCheckedStat({\n      count: 0,\n      checkedCount: 0,\n      onlineCount: 0,\n      offlineCount: 0\n    });\n    setCheckedMap({});\n    // get hash\n    try {\n      const mattersResult = await getMattersHash({\n        mediaHash: mediaHash\n      });\n      if (\n        mattersResult &&\n        mattersResult.article &&\n        mattersResult.article.dataHash\n      ) {\n        const { dataHash } = mattersResult.article;\n        setHash(dataHash);\n        handleChangeHash(dataHash);\n      } else if (mattersResult && mattersResult.article === null) {\n        setErrorMessage(\n          `Can't get the matters dataHash, this may cause by your matters url`\n        );\n        setOpenError(true);\n      } else {\n        setErrorMessage(\n          `Can't get the matters dataHash, this may cause by our convert server error`\n        );\n        setOpenError(true);\n      }\n    } catch (error) {\n      setErrorMessage(error.message);\n      setOpenError(true);\n    }\n    setLoading(false);\n  };\n\n  const handleClickRandom = () => {\n    const newUrl =\n      \"https://matters.news/@leungkaichihk/%E9%A6%99%E6%B8%AF%E7%AC%AC%E4%B8%80%E8%AA%B2-%E7%B0%A1%E4%BB%8B%E5%8F%8A%E7%9B%AE%E9%8C%84-zdpuB2J818r8yUSDeZ4vDARrnQ4ut3S2UYjALXHJ16jp25w4P\";\n\n    handleChangeUrl({\n      target: {\n        value: newUrl\n      }\n    });\n    setAutoConvert(true);\n  };\n  const handleClickCopy = () => {\n    setOpen(true);\n  };\n  useEffect(() => {\n    if (!isInit) {\n      setIsInit(true);\n    }\n    if (!isInit && searchUrl) {\n      setAutoConvert(true);\n      handleChangeUrl({\n        target: {\n          value: searchUrl\n        }\n      });\n    } else if (isInit && autoConvert) {\n      setAutoConvert(false);\n      handleConvert();\n    }\n  });\n  const currentPageAutoLink = `${window.location.protocol}//${\n    window.location.host\n  }/?url=${encodeURIComponent(url)}`;\n  return (\n    <div className={classes.root}>\n      {/* Hero unit */}\n      <div className={classes.heroContent}>\n        <Container maxWidth=\"md\">\n          <Typography\n            component=\"h1\"\n            variant=\"h2\"\n            align=\"center\"\n            color=\"textPrimary\"\n            gutterBottom\n          >\n            Convert{\" \"}\n            <Link\n              href=\"https://matters.news\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Matters\n            </Link>{\" \"}\n            to{\" \"}\n            <Link\n              href=\"https://contributionls.github.io/public-gateway-checker/\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              IPFS\n            </Link>\n          </Typography>\n        </Container>\n      </div>\n      <FormGroup>\n        <TextField\n          id={`url`}\n          required\n          autoFocus={true}\n          inputProps={{\n            autoComplete: \"off\"\n          }}\n          label={`Matters Article Url`}\n          type=\"url\"\n          placeholder=\"https://matters.news/@leungkaichihk/%E9%A6%99%E6%B8%AF%E7%AC%AC%E4%B8%80%E8%AA%B2-%E7%B0%A1%E4%BB%8B%E5%8F%8A%E7%9B%AE%E9%8C%84-zdpuB2J818r8yUSDeZ4vDARrnQ4ut3S2UYjALXHJ16jp25w4P\"\n          onChange={handleChangeUrl}\n          value={url}\n          variant=\"outlined\"\n          margin=\"normal\"\n          error={urlError}\n          helperText={urlError ? \"URL is invalid!\" : \"\"}\n        />\n        <FormGroup row className={classes.centerButton}>\n          <Button\n            onClick={handleConvert}\n            color=\"primary\"\n            size=\"large\"\n            variant=\"outlined\"\n            disabled={isLoading}\n            className={`${classes.button}`}\n          >\n            {isLoading ? (\n              <CircularProgress\n                size={20}\n                color=\"inherit\"\n                className={classes.buttonIcon}\n              />\n            ) : (\n              <ImportExport fontSize=\"small\" className={classes.buttonIcon} />\n            )}\n            Convert\n          </Button>\n          <Button\n            onClick={handleClickRandom}\n            variant=\"outlined\"\n            color=\"default\"\n            size=\"large\"\n            className={`${classes.button} ${classes.buttonRight}`}\n          >\n            Example\n          </Button>\n        </FormGroup>\n        {hash ? (\n          <div>\n            <Divider className={classes.divider} />\n            <List\n              aria-labelledby=\"nested-list-subheader\"\n              subheader={\n                <ListSubheader\n                  component=\"div\"\n                  className={classes.subheader}\n                  id=\"nested-list-subheader\"\n                >\n                  {checkedStat.checkedCount}/{checkedStat.count} gateways,{\" \"}\n                  {checkedStat.onlineCount} are online,{\" \"}\n                  {checkedStat.offlineCount} are offline\n                </ListSubheader>\n              }\n              dense={false}\n            >\n              {getResults().map((item, index) => {\n                return (\n                  <ListItem key={`key_${index}`}>\n                    <ListItemAvatar\n                      className={`${classes.center} ${classes.overAvatar}`}\n                    >\n                      <div>\n                        {item.status === \"init\" ? (\n                          <AccessTime color=\"disabled\" />\n                        ) : null}\n                        {item.status === \"checking\" ? (\n                          <CircularProgress\n                            size={20}\n                            color=\"secondary\"\n                            className={classes.buttonIcon}\n                          />\n                        ) : null}\n                        {item.status === \"offline\" ? (\n                          <HighlightOff color=\"error\" />\n                        ) : null}\n                        {item.status === \"online\" ? (\n                          <CheckCircle color=\"primary\" />\n                        ) : null}\n                      </div>\n                    </ListItemAvatar>\n                    <ListItemText\n                      primaryTypographyProps={{\n                        className: classes.listItem\n                      }}\n                      primary={\n                        <Link\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                          href={item.displayUrl}\n                        >\n                          {item.displayUrl}\n                        </Link>\n                      }\n                      secondary={\n                        item.status === \"offline\"\n                          ? item.error\n                          : item.status === \"online\"\n                          ? `${item.timeout}ms`\n                          : null\n                      }\n                    />\n                    <ListItemSecondaryAction>\n                      <CopyToClipboard\n                        text={item.displayUrl}\n                        onCopy={handleClickCopy}\n                      >\n                        <IconButton edge=\"end\" aria-label=\"copy\">\n                          <ContentCopy />\n                        </IconButton>\n                      </CopyToClipboard>\n                    </ListItemSecondaryAction>\n                  </ListItem>\n                );\n              })}\n            </List>\n            <Divider className={classes.divider} />\n            <Typography variant=\"h5\" component=\"h3\">\n              Want a link that automatically checks the IPFS address of the article?\n            </Typography>\n            <Paper className={classes.inputRoot}>\n              <InputBase\n                value={currentPageAutoLink}\n                className={classes.input}\n                placeholder=\"Search Google Maps\"\n                inputProps={{ \"aria-label\": \"search google maps\" }}\n              />\n              <IconButton\n                className={classes.iconButton}\n                aria-label=\"copy\"\n              >\n                <CopyToClipboard\n                  text={currentPageAutoLink}\n                  onCopy={handleClickCopy}\n                >\n                    <ContentCopy  />\n                </CopyToClipboard>\n              </IconButton>\n            </Paper>\n          </div>\n        ) : null}\n\n      </FormGroup>\n      <Snackbar\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\"\n        }}\n        open={open}\n        autoHideDuration={1500}\n        onClose={handleClose}\n      >\n        <SnackBarContentWrapper\n          onClose={handleClose}\n          variant=\"success\"\n          message=\"The url has be copied!\"\n        />\n      </Snackbar>\n      <Snackbar\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\"\n        }}\n        open={openError}\n        autoHideDuration={2500}\n        onClose={handleCloseError}\n      >\n        <SnackBarContentWrapper\n          onClose={handleCloseError}\n          variant=\"error\"\n          message={errorMessage}\n        />\n      </Snackbar>\n    </div>\n  );\n}\n","import axios from \"axios\";\n\nexport function api(url, config) {\n  return axios(url, config)\n    .then(result => {\n      if (typeof result.data === \"object\") {\n        return JSON.stringify(result.data, null, 2);\n      } else {\n        return result.data;\n      }\n    })\n    .catch(error => {\n      if (error.response) {\n        if (error.response.data) {\n          error.message = error.response.data;\n        }\n      }\n      throw error;\n    });\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n\n  Typography,\n  Link,\n  CssBaseline,\n  Container\n} from \"@material-ui/core\";\nimport Home from \"./Home\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    flexGrow: 1,\n    minHeight: \"100vh\",\n    backgroundColor: theme.palette.background.paper\n  },\n  grow: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  link: {\n    margin: theme.spacing(1)\n  },\n  title: {\n    flexGrow: 1\n  },\n  space: {\n    marginRight: theme.spacing(1),\n    marginLeft: theme.spacing(1)\n  },\n  footer: {\n    paddingTop: theme.spacing(1),\n    paddingBottom: theme.spacing(2),\n    marginTop: \"auto\",\n    backgroundColor: \"#f2f2f2\",\n    borderTop: \"1px solid #e4e4e4\",\n    lineHeight: 40\n  },\n  flex: {\n    display: \"flex\",\n    justifyContent: \"center\"\n  }\n}));\n\nexport default function ButtonAppBar() {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <div className={classes.root}>\n        <div className=\"sharethis-inline-share-buttons\" style={{padding:10}} />\n        <Container maxWidth=\"md\">\n          <Home />\n        </Container>\n        <footer className={classes.footer}>\n          <Container maxWidth=\"sm\">\n            <div className={classes.flex}>\n              <Typography variant=\"body2\" className={classes.space}>\n                <Link\n                  color=\"textSecondary\"\n                  href=\"https://github.com/contributionls/matters2ipfs\"\n                >\n                  Github\n                </Link>\n              </Typography>\n\n              <Typography variant=\"body2\" className={classes.space}>\n                <Link\n                  color=\"textSecondary\"\n                  href=\"https://github.com/contributionls/matters2ipfs/blob/master/README.md#getting_started\"\n                >\n                  Docs\n                </Link>\n              </Typography>\n              <Typography variant=\"body2\" className={classes.space}>\n                <Link\n                  color=\"textSecondary\"\n                  href=\"https://github.com/contributionls/matters2ipfs/issues/new\"\n                >\n                  Submit Gateway\n                </Link>\n              </Typography>\n              <Typography variant=\"body2\" className={classes.space}>\n                <Link\n                  color=\"textSecondary\"\n                  href=\"https://github.com/contributionls/matters2ipfs/blob/master/Terms.md\"\n                >\n                  Terms of Use\n                </Link>\n              </Typography>\n              <Typography variant=\"body2\" className={classes.space}>\n              <Link\n                color=\"textSecondary\"\n                href=\"https://matters.news/@deserve\"\n              >\n                Follow\n              </Link>\n            </Typography>\n            </div>\n          </Container>\n        </footer>\n      </div>\n    </React.Fragment>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {main:'#0d6763'},\n    secondary:{main: '#c0a46b'}\n  }\n});\n\nfunction Root() {\n  return (\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  );\n}\nReactDOM.render(<Root />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}